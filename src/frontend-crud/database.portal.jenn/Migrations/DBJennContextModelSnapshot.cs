// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.portal.jenn.Contexto;

namespace database.portal.jenn.Migrations
{
    [DbContext(typeof(DBJennContext))]
    partial class DBJennContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.portal.jenn.DTO.Agenda", b =>
                {
                    b.Property<int>("AgendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_agenda")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnName("agen_atv")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataVigencia")
                        .HasColumnName("agen_datvige")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Dia")
                        .HasColumnName("agen_dia")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hora")
                        .HasColumnName("agen_hora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Mes")
                        .HasColumnName("agen_mes")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedimentoEmpresaID")
                        .HasColumnType("int");

                    b.HasKey("AgendaID");

                    b.HasIndex("ProcedimentoEmpresaID");

                    b.ToTable("proceagenda");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Avalia", b =>
                {
                    b.Property<int>("AvaliaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_avalia")
                        .HasColumnType("int");

                    b.Property<string>("Avaliacao")
                        .IsRequired()
                        .HasColumnName("nps_avalia")
                        .HasColumnType("varchar(4) CHARACTER SET utf8mb4")
                        .HasMaxLength(4);

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnName("obs_avalia")
                        .HasColumnType("varchar(400) CHARACTER SET utf8mb4")
                        .HasMaxLength(400);

                    b.Property<string>("feedback")
                        .IsRequired()
                        .HasColumnName("feedback_avalia")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.HasKey("AvaliaID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("avalia");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.CategoriaProcedimento", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_categoria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_categoria")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("CategoriaID");

                    b.ToTable("procedcat");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Cidade", b =>
                {
                    b.Property<int>("CidadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_cidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_cid")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("CidadeID");

                    b.ToTable("cidade");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_cliente")
                        .HasColumnType("int");

                    b.Property<string>("Celular")
                        .HasColumnName("cel_cliente")
                        .HasColumnType("varchar(21) CHARACTER SET utf8mb4")
                        .HasMaxLength(21);

                    b.Property<string>("Cep")
                        .HasColumnName("cep_cliente")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int?>("CidadeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtaNascimento")
                        .HasColumnName("nasc_cliente")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logradouro")
                        .HasColumnName("logr_cliente")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_cliente")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Referencia")
                        .HasColumnName("refer_cliente")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnName("sex_cliente")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("tel_cliente")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("bairro")
                        .HasColumnName("bai_cliente")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("cpf_cliente")
                        .IsRequired()
                        .HasColumnName("cpf_cliente")
                        .HasColumnType("varchar(11) CHARACTER SET utf8mb4")
                        .HasMaxLength(11);

                    b.Property<string>("numero")
                        .HasColumnName("num_cliente")
                        .HasColumnType("varchar(12) CHARACTER SET utf8mb4")
                        .HasMaxLength(12);

                    b.Property<string>("sobrenome")
                        .IsRequired()
                        .HasColumnName("sobnom_cliente")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("ClienteID");

                    b.HasIndex("CidadeID");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.ConfirmacaoAgenda", b =>
                {
                    b.Property<int>("ConfirmacaoAgendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_confirma_agenda")
                        .HasColumnType("int");

                    b.Property<int?>("AgendaID")
                        .HasColumnType("int");

                    b.Property<string>("AlergiaReacoes")
                        .IsRequired()
                        .HasColumnName("alergia_reacoes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("Altura")
                        .HasColumnName("altura_pac")
                        .HasColumnType("float");

                    b.Property<string>("CarteirinhaConvenio")
                        .IsRequired()
                        .HasColumnName("num_carteirinha_convenio")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<ulong>("PacienteTitular")
                        .HasColumnName("bln_paciente_tiular")
                        .HasColumnType("bit");

                    b.Property<float>("Peso")
                        .HasColumnName("peso_paciente")
                        .HasColumnType("float");

                    b.Property<int?>("PlanoID")
                        .HasColumnType("int");

                    b.Property<ulong>("contraste")
                        .HasColumnName("bln_contr")
                        .HasColumnType("bit");

                    b.HasKey("ConfirmacaoAgendaID");

                    b.HasIndex("AgendaID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("PlanoID");

                    b.ToTable("proceagendaconfirma");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Contato", b =>
                {
                    b.Property<int>("ContatoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_cont")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email_cont")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_cont")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Telefone")
                        .HasColumnName("tele_cont")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("mensagem_cont")
                        .IsRequired()
                        .HasColumnName("mensagem_cont")
                        .HasColumnType("varchar(800) CHARACTER SET utf8mb4")
                        .HasMaxLength(800);

                    b.HasKey("ContatoID");

                    b.ToTable("contato");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Convenio", b =>
                {
                    b.Property<int>("ConvenioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_conv")
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .HasColumnName("atv_proced")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnName("data_inc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_conv")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("ConvenioId");

                    b.ToTable("conv");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Domicilio", b =>
                {
                    b.Property<int>("DomicilioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_domic")
                        .HasColumnType("int");

                    b.Property<int?>("CidadeID")
                        .HasColumnType("int");

                    b.Property<float>("PrecoDomicilio")
                        .HasColumnName("precodom_domic")
                        .HasColumnType("float")
                        .HasMaxLength(4);

                    b.Property<int?>("ProcedimentoEmpresaID")
                        .HasColumnType("int");

                    b.HasKey("DomicilioID");

                    b.HasIndex("CidadeID");

                    b.HasIndex("ProcedimentoEmpresaID");

                    b.ToTable("domic");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Empresa", b =>
                {
                    b.Property<int>("EmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_emp")
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .HasColumnName("atv_proced")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<string>("Cert_Empresa")
                        .HasColumnName("cert_emp")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<int?>("CidadeID")
                        .HasColumnType("int");

                    b.Property<int>("CodigoCnes")
                        .HasColumnName("cod_cnes")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("mail_emp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("GrupoID")
                        .HasColumnType("int");

                    b.Property<string>("Id_classe")
                        .HasColumnName("id_classe")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("ImgemFrontEmpresa")
                        .HasColumnName("imgfront_emp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnName("logr_emp")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<int?>("MatrizID")
                        .HasColumnName("cod_matriz_emp")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome_emp")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnName("reps_emp")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasColumnName("tel_emp1")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Telefone2")
                        .HasColumnName("tel_emp2")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnName("bai_emp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnName("cep_emp")
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4")
                        .HasMaxLength(16);

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnName("cnpj_emp")
                        .HasColumnType("varchar(14) CHARACTER SET utf8mb4")
                        .HasMaxLength(14);

                    b.Property<string>("maps")
                        .HasColumnName("maps_emp")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnName("num_emp")
                        .HasColumnType("varchar(12) CHARACTER SET utf8mb4")
                        .HasMaxLength(12);

                    b.HasKey("EmpresaID");

                    b.HasIndex("CidadeID");

                    b.HasIndex("GrupoID");

                    b.HasIndex("MatrizID");

                    b.ToTable("emp");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.FotoEmpresa", b =>
                {
                    b.Property<int>("FotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_foto")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome_foto")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("path")
                        .IsRequired()
                        .HasColumnName("path_emp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("FotoID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("fotoemp");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Grupo", b =>
                {
                    b.Property<int>("GrupoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_grupo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_grupo")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("GrupoID");

                    b.ToTable("grupo");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Logon", b =>
                {
                    b.Property<int>("LogonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .HasColumnName("atv_logon")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnName("dt_inclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("usua_email")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("usua_nome")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("LogonID");

                    b.ToTable("Logon");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Pagamento", b =>
                {
                    b.Property<int>("PagamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_pgto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_pgto")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("PagamentoID");

                    b.ToTable("pgto");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.PagamentoProcedimentoEmpresa", b =>
                {
                    b.Property<int>("PagamentoProcedimentoEmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_pgtoprocemp")
                        .HasColumnType("int");

                    b.Property<int?>("PagamentoID")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedimentoEmpresaID")
                        .HasColumnType("int");

                    b.HasKey("PagamentoProcedimentoEmpresaID");

                    b.HasIndex("PagamentoID");

                    b.HasIndex("ProcedimentoEmpresaID");

                    b.ToTable("pgtoprocemp");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Pais", b =>
                {
                    b.Property<int>("PaisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_pais")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_pais")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("PaisID");

                    b.ToTable("pais");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Plano", b =>
                {
                    b.Property<int>("PlanoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_plano")
                        .HasColumnType("int");

                    b.Property<int?>("ConvenioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_plano")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("PlanoID");

                    b.HasIndex("ConvenioId");

                    b.ToTable("plano_conv");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.PlanoProcedimentoEmpresa", b =>
                {
                    b.Property<int>("PlanoProcedimentoEmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_planoprocemp")
                        .HasColumnType("int");

                    b.Property<int?>("PlanoID")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedimentoEmpresaID")
                        .HasColumnType("int");

                    b.HasKey("PlanoProcedimentoEmpresaID");

                    b.HasIndex("PlanoID");

                    b.HasIndex("ProcedimentoEmpresaID");

                    b.ToTable("planoprocemp");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Procedimento", b =>
                {
                    b.Property<int>("ProcedimentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_proced")
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .HasColumnName("atv_proced")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("desc_proced")
                        .HasColumnType("varchar(400) CHARACTER SET utf8mb4")
                        .HasMaxLength(400);

                    b.Property<string>("ImgProduto_Proc")
                        .IsRequired()
                        .HasColumnName("imgprod_proced")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_proced")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("TipoProcedimentoID")
                        .HasColumnType("int");

                    b.HasKey("ProcedimentoID");

                    b.HasIndex("TipoProcedimentoID");

                    b.ToTable("proced");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.ProcedimentoEmpresa", b =>
                {
                    b.Property<int>("ProcedimentoEmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_procemp")
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .HasColumnName("atv_proced")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnName("dataincl_procemp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Destaque")
                        .HasColumnName("dest_proced")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaID")
                        .HasColumnName("cod_emp")
                        .HasColumnType("int");

                    b.Property<string>("ImagemHome")
                        .IsRequired()
                        .HasColumnName("imghome_procemp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ImagemMain")
                        .IsRequired()
                        .HasColumnName("imgmain_procemp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ImagemThumb")
                        .IsRequired()
                        .HasColumnName("imgthumb_procemp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Nome_pers")
                        .IsRequired()
                        .HasColumnName("nompers_procemp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<float>("PrecoProduto")
                        .HasColumnName("precoprod_procemp")
                        .HasColumnType("float");

                    b.Property<float>("Preco_contra")
                        .HasColumnName("precocontra_procemp")
                        .HasColumnType("float");

                    b.Property<int>("ProcedimentoID")
                        .HasColumnName("cod_proced")
                        .HasColumnType("int");

                    b.Property<string>("TaxaParcelamento")
                        .IsRequired()
                        .HasColumnName("txtparcel_procemp")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("TaxaResultado")
                        .IsRequired()
                        .HasColumnName("txtresult_procemp")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnName("video_procemp")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("ProcedimentoEmpresaID");

                    b.HasIndex("ProcedimentoID");

                    b.HasIndex("EmpresaID", "ProcedimentoID")
                        .IsUnique();

                    b.ToTable("procemp");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.ProcedimentoPergunta", b =>
                {
                    b.Property<int>("ProcedimentoPerguntaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_procperg")
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .HasColumnName("atv_proced")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<int?>("ProcedimentoEmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnName("desc_procperg")
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300);

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnName("titulo_procperg")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.HasKey("ProcedimentoPerguntaID");

                    b.HasIndex("ProcedimentoEmpresaID");

                    b.ToTable("procperg");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Regiao", b =>
                {
                    b.Property<int>("UfID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_regiao")
                        .HasColumnType("int");

                    b.Property<int?>("CidadeID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_reg")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("UfID");

                    b.HasIndex("CidadeID");

                    b.ToTable("regiao");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("LogonID")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("papel")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("RoleID");

                    b.HasIndex("LogonID");

                    b.ToTable("papeis");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.TipoProcedimento", b =>
                {
                    b.Property<int>("TipoProcedimentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_tipproced")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_tipproced")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("TipoProcedimentoID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("tipo_proced");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.UF", b =>
                {
                    b.Property<int>("UfID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_uf")
                        .HasColumnType("int");

                    b.Property<int?>("CidadeID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nom_uf")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("PaisID")
                        .HasColumnType("int");

                    b.HasKey("UfID");

                    b.HasIndex("CidadeID");

                    b.HasIndex("PaisID");

                    b.ToTable("uf");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cod_usuario")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("mail_usuario")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("LogonID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("UsuarioID");

                    b.HasIndex("ClienteID")
                        .IsUnique();

                    b.HasIndex("LogonID");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Agenda", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.ProcedimentoEmpresa", "ProcedimentoEmpresa")
                        .WithMany()
                        .HasForeignKey("ProcedimentoEmpresaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Avalia", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Cliente", "Cliente")
                        .WithMany("Avaliacao")
                        .HasForeignKey("ClienteID");

                    b.HasOne("api.portal.jenn.DTO.Empresa", "Empresa")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Cliente", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.ConfirmacaoAgenda", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Agenda", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaID");

                    b.HasOne("api.portal.jenn.DTO.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("api.portal.jenn.DTO.Plano", "Plano")
                        .WithMany()
                        .HasForeignKey("PlanoID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Domicilio", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeID");

                    b.HasOne("api.portal.jenn.DTO.ProcedimentoEmpresa", "ProcedimentoEmpresa")
                        .WithMany()
                        .HasForeignKey("ProcedimentoEmpresaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Empresa", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeID");

                    b.HasOne("api.portal.jenn.DTO.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoID");

                    b.HasOne("api.portal.jenn.DTO.Empresa", "Matriz")
                        .WithMany()
                        .HasForeignKey("MatrizID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.FotoEmpresa", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Empresa", "Empresa")
                        .WithMany("Fotos")
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.PagamentoProcedimentoEmpresa", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoID");

                    b.HasOne("api.portal.jenn.DTO.ProcedimentoEmpresa", "ProcedimentoEmpresa")
                        .WithMany("PagamentoProcedimentoEmpresas")
                        .HasForeignKey("ProcedimentoEmpresaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Plano", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Convenio", "Convenio")
                        .WithMany("Planos")
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("api.portal.jenn.DTO.PlanoProcedimentoEmpresa", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Plano", "Plano")
                        .WithMany("PlanoProcedimentoEmpresas")
                        .HasForeignKey("PlanoID");

                    b.HasOne("api.portal.jenn.DTO.ProcedimentoEmpresa", "ProcedimentoEmpresa")
                        .WithMany("PlanoProcedimentoEmpresas")
                        .HasForeignKey("ProcedimentoEmpresaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Procedimento", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.TipoProcedimento", "TipoProcedimento")
                        .WithMany()
                        .HasForeignKey("TipoProcedimentoID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.ProcedimentoEmpresa", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Empresa", "Empresa")
                        .WithMany("ProcedimentoEmpresas")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.portal.jenn.DTO.Procedimento", "Procedimento")
                        .WithMany("ProcedimentoEmpresas")
                        .HasForeignKey("ProcedimentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.portal.jenn.DTO.ProcedimentoPergunta", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.ProcedimentoEmpresa", "ProcedimentoEmpresa")
                        .WithMany("ProcedimentoPerguntas")
                        .HasForeignKey("ProcedimentoEmpresaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Regiao", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Cidade", null)
                        .WithMany("Regiao")
                        .HasForeignKey("CidadeID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Roles", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Logon", null)
                        .WithMany("Papeis")
                        .HasForeignKey("LogonID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.TipoProcedimento", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.CategoriaProcedimento", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.UF", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Cidade", null)
                        .WithMany("Ufs")
                        .HasForeignKey("CidadeID");

                    b.HasOne("api.portal.jenn.DTO.Pais", "Pais")
                        .WithMany("Ufs")
                        .HasForeignKey("PaisID");
                });

            modelBuilder.Entity("api.portal.jenn.DTO.Usuario", b =>
                {
                    b.HasOne("api.portal.jenn.DTO.Cliente", "Cliente")
                        .WithOne("Usuario")
                        .HasForeignKey("api.portal.jenn.DTO.Usuario", "ClienteID");

                    b.HasOne("api.portal.jenn.DTO.Logon", "Logon")
                        .WithMany()
                        .HasForeignKey("LogonID");
                });
#pragma warning restore 612, 618
        }
    }
}
